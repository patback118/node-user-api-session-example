{
	"info": {
		"_postman_id": "3e80e605-95d8-4b84-b3a0-31f99495c914",
		"name": "tests-backend-pat-mcmullen",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json",
		"_exporter_id": "22739708"
	},
	"item": [
		{
			"name": "Logout Before Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 204\", function () {",
							"    pm.response.to.have.status(204);",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{Current Host URL}}/user/logout",
					"host": [
						"{{Current Host URL}}"
					],
					"path": [
						"user",
						"logout"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login before user created",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 404\", function () {",
							"    pm.response.to.have.status(404);",
							"});",
							"pm.test(\"User shouldn't exist\", function () {",
							"    pm.expect(pm.response.text()).to.eql('{\"message\":\"User does not exist\"}');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"test@test.com\",\n    \"password\": \"test\"\n}"
				},
				"url": {
					"raw": "{{Current Host URL}}/user/login",
					"host": [
						"{{Current Host URL}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login with empty body",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Login won't work with empty body\", function () {",
							"    pm.expect(pm.response.text()).to.eql('{\"error\":\"Email or password not set in body\"}');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n}"
				},
				"url": {
					"raw": "{{Current Host URL}}/user/login",
					"host": [
						"{{Current Host URL}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Signup with bad email",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Should catch unvalid email address\", function () {",
							"    pm.expect(pm.response.text()).to.eql('{\"message\":\"Not a valid email\"}');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"notanemail\",\n    \"password\": \"test\"\n}"
				},
				"url": {
					"raw": "{{Current Host URL}}/user/signup",
					"host": [
						"{{Current Host URL}}"
					],
					"path": [
						"user",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Signup with empty body",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 400\", function () {",
							"    pm.response.to.have.status(400);",
							"});",
							"pm.test(\"Signup won't work with empty body\", function () {",
							"    pm.expect(pm.response.text()).to.eql('{\"error\":\"Email or password not set in body\"}');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n}"
				},
				"url": {
					"raw": "{{Current Host URL}}/user/signup",
					"host": [
						"{{Current Host URL}}"
					],
					"path": [
						"user",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Signup successfully",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 201\", function () {",
							"    pm.response.to.have.status(201);",
							"});",
							"pm.test(\"New user created\", function () {",
							"    pm.expect(pm.response.text()).to.eql('{\"message\":\"Created new user for email: test@test.com\"}');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"test@test.com\",\n    \"password\": \"test\"\n}"
				},
				"url": {
					"raw": "{{Current Host URL}}/user/signup",
					"host": [
						"{{Current Host URL}}"
					],
					"path": [
						"user",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Signup when user exists",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 409\", function () {",
							"    pm.response.to.have.status(409);",
							"});",
							"pm.test(\"User should already exist\", function () {",
							"    pm.expect(pm.response.text()).to.eql('{\"message\":\"User already exists\"}');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"test@test.com\",\n    \"password\": \"test\"\n}"
				},
				"url": {
					"raw": "{{Current Host URL}}/user/signup",
					"host": [
						"{{Current Host URL}}"
					],
					"path": [
						"user",
						"signup"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login with wrong password",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 401\", function () {",
							"    pm.response.to.have.status(401);",
							"});",
							"pm.test(\"Incorrect passwords shouldn't log the user in\", function () {",
							"    pm.expect(pm.response.text()).to.eql('{\"message\":\"Incorrect password\"}');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"test@test.com\",\n    \"password\": \"wrong\"\n}"
				},
				"url": {
					"raw": "{{Current Host URL}}/user/login",
					"host": [
						"{{Current Host URL}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Login successfully",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"User should be able to log in\", function () {",
							"    pm.expect(pm.response.text()).to.eql('{\"message\":\"test@test.com is now logged in\"}');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "POST",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"body": {
					"mode": "raw",
					"raw": "{\n    \"email\": \"test@test.com\",\n    \"password\": \"test\"\n}"
				},
				"url": {
					"raw": "{{Current Host URL}}/user/login",
					"host": [
						"{{Current Host URL}}"
					],
					"path": [
						"user",
						"login"
					]
				}
			},
			"response": []
		},
		{
			"name": "Logout After Login",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"pm.test(\"Status code is 200\", function () {",
							"    pm.response.to.have.status(200);",
							"});",
							"pm.test(\"User should be able to log out\", function () {",
							"    pm.expect(pm.response.text()).to.eql('{\"message\":\"Logged out\"}');",
							"});"
						],
						"type": "text/javascript"
					}
				}
			],
			"request": {
				"method": "GET",
				"header": [
					{
						"key": "Content-Type",
						"value": "application/json",
						"type": "text"
					}
				],
				"url": {
					"raw": "{{Current Host URL}}/user/logout",
					"host": [
						"{{Current Host URL}}"
					],
					"path": [
						"user",
						"logout"
					]
				}
			},
			"response": []
		}
	],
	"event": [
		{
			"listen": "prerequest",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		},
		{
			"listen": "test",
			"script": {
				"type": "text/javascript",
				"exec": [
					""
				]
			}
		}
	],
	"variable": [
		{
			"key": "Current Host URL",
			"value": ""
		}
	]
}